





swagger: '2.0'
info:
  title: Namely API
  description: Move your app forward with the Namely API
  version: "1.0"
# the domain of the service
host: company.namely.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /api/{version}
paths:
  /profiles:
    get:
      summary: Profiles Index
      description: |
        This method returns an array of `profiles`, whose format and content will be the same as the show profile endpoint.
        This endpoint uses pagination through two optional parameters. The first, limit, defaults to 30 and accepts EITHER an integer value, OR the string 'all' to return all records. The second, after, should be the id of the first record BEFORE the recrods that you want to retrieve.
      parameters:
        - name: per_page
          in: query
          description: Integer limit of records retrieved.
          type: integer
        - name: page
          in: query
          description: The page number to retrieve.
          type: integer
        - name: sort
          in: query
          description: An attribute to sort by fields on profiles. Allowed attributes are first_name, last_name, and job_title. Prepend with a - (minus) sign to reverse the order.
          type: string
        - name: filter
          in: query
          description: A hash containing a filter you'd like to apply before profiles are returned.
          type: string
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              profiles:
                type: array
                items:
                  $ref: "#/definitions/Profile"
              meta:
                $ref: "#/definitions/Profile Meta"
              links:
                $ref: "#/definitions/Profile Links"
              linked:
                type: object
                properties:
                  job_titles:
                    type: array
                    items:
                      $ref: "#/definitions/Job Title"
                  files:
                    type: array
                    items:
                      $ref: "#/definitions/File"
                  groups:
                    type: array
                    items:
                      $ref: "#/definitions/Group"
                  teams:
                    type: array
                    items:
                      $ref: "#/definitions/Team"
      tags:
        - Profiles
    post:
      summary: Create Profile
      description: The fields that you can set and will receive are a combination of Namely's defaults fields and custom fields that exist only for your company.
      parameters:
      - name: body
        in: body
        required: true
        description: JSON payload for the post request.
        schema:
          $ref: "#/definitions/Create Profile"
      responses:
        201:
          description: "Created Response"
          schema:
            type: object
            properties:
              profiles:
                type: array
                items:
                  $ref: "#/definitions/Profile"
              meta:
                $ref: "#/definitions/Profile Meta"
              links:
                $ref: "#/definitions/Profile Links"
              linked:
                type: object
                properties:
                  job_titles:
                    type: array
                    items:
                      $ref: "#/definitions/Job Title"
                  files:
                    type: array
                    items:
                      $ref: "#/definitions/File"
                  groups:
                    type: array
                    items:
                      $ref: "#/definitions/Group"
                  teams:
                    type: array
                    items:
                      $ref: "#/definitions/Team"
      tags:
        - Profiles
  /profiles/:id:
    get:
      summary: Show Profiles
      description: |
        This method allows users to retrieve a `profile`.
        The profile entry will contain additional information from all fields that your company has (default and custom) that are currently supported by the API and that the current user has access to for the given user. You can get a full list of accessible fields, as well as information on formatting them from the fields API endpoint.
      parameters:
        - name: id
          in: query
          description: id of the profile you wish to retrieve.
          type: string
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              profiles:
                type: array
                items:
                  $ref: "#/definitions/Profile"
              meta:
                $ref: "#/definitions/Profile Meta"
              links:
                $ref: "#/definitions/Profile Links"
              linked:
                type: object
                properties:
                  job_titles:
                    type: array
                    items:
                      $ref: "#/definitions/Job Title"
                  files:
                    type: array
                    items:
                      $ref: "#/definitions/File"
                  groups:
                    type: array
                    items:
                      $ref: "#/definitions/Group"
                  teams:
                    type: array
                    items:
                      $ref: "#/definitions/Team"
      tags:
        - Profiles
    put:
      summary: Update Profile
      description: |
        The update action is similar to the create action in what is modifiable and how it should be set. You need only pass the attributes that you would like to modify. Any others will remain as they are.
      parameters:
        - name: id
          in: query
          type: string
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              profiles:
                type: array
                items:
                  $ref: "#/definitions/Profile"
              meta:
                type: object
                properties:
                  count:
                    type: integer
                  status:
                    type: integer
              links:
                type: object
                items:
                  $ref: "#/definitions/Profile Links"
              linked:
                type: object
                properties:
                  job_titles:
                    type: array
                    items:
                      $ref: "#/definitions/Job Title"
                  files:
                    type: array
                    items:
                      $ref: "#/definitions/File"
                  groups:
                    type: array
                    items:
                      $ref: "#/definitions/Group"
                  teams:
                    type: array
                    items:
                      $ref: "#/definitions/Team"
      tags:
      - Profiles
  /profiles/me:
    get:
      summary: Current User
      description: |
        The response will contain information about the user who owns the access token used to access the API.
        If the access token belongs to a full Profile, the response content and format will be Identical as if you did a show request for that profile.
        However, if you are accessing via a dedicated API user, the response will be much shorter. The most important element in such a response would be EMAIL. FIRST_NAME and LAST_NAME will both be "Admin".
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              profiles:
                type: array
                items:
                  $ref: "#/definitions/Profile"
              meta:
                $ref: "#/definitions/Profile Meta"
              links:
                $ref: "#/definitions/Profile Links"
              linked:
                type: object
                properties:
                  job_titles:
                    type: array
                    items:
                      $ref: "#/definitions/Job Title"
                  files:
                    type: array
                    items:
                      $ref: "#/definitions/File"
                  groups:
                    type: array
                    items:
                      $ref: "#/definitions/Group"
                  teams:
                    type: array
                    items:
                      $ref: "#/definitions/Team"
      tags:
        - Profiles
  /profiles/fields:
    get:
      summary: Profile Fields Index
      description: |
        Returns all currently supported Fields, default and custom.
        NAME is the internal name of the field, which is also the key that should be used in the profile API endpoints. This may be distinct from LABEL, which is what will appear in the web interface.
        The valid format info is an attempt to explain what the proper format and possible values are for that field.
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              fields:
                type: array
                items:
                  $ref: "#/definitions/Field"
              meta:
                $ref: "#/definitions/Meta"
              links:
                type: object
                properties:
                  fields.sections:
                    type: string
              linked:
                type: object
                properties:
                  sections:
                    type: array
                    items:
                      $ref: "#/definitions/Section"
      tags:
        - Profile Fields
    post:
      summary: Create Profile Field
      description: |
        Allows you to create a profile field within a section.
      parameters:
      - name: body
        in: body
        required: true
        description: JSON payload for the post request.
        schema:
          $ref: "#/definitions/Create Profile Field"
      responses:
        201:
          description: "Created Response"
          schema:
            type: object
            properties:
              fields:
                type: array
                items:
                  $ref: "#/definitions/Field"
              meta:
                type: object
                $ref: "#/definitions/Meta"
              links:
                type: object
                properties:
                  fields.sections:
                    type: string
              linked:
                type: object
                properties:
                  sections:
                    type: array
                    items:
                      $ref: "#/definitions/Section"
      tags:
        - Profile Fields
  /profiles/fields/:id:
    put:
      summary: Update Profile Field
      description: |
        Returns all currently supported Fields, default and custom.
        NAME is the internal name of the field, which is also the key that should be used in the profile API endpoints. This may be distinct from LABEL, which is what will appear in the web interface.
        The valid format info is an attempt to explain what the proper format and possible values are for that field.
      parameters:
        - name: id
          in: query
          description: id of the field name you wish to change.
          type: string
        - name: body
          in: body
          required: true
          description: JSON payload for the post request.
          schema:
            $ref: "#/definitions/Update Profile Field"
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              fields:
                type: array
                items:
                  $ref: "#/definitions/Field"
              meta:
                type: object
                properties:
                  count:
                    type: integer
                  status:
                    type: integer
              links:
                type: object
                properties:
                  fields.sections:
                    type: string
              linked:
                type: object
                properties:
                  sections:
                    type: array
                    items:
                      $ref: "#/definitions/Section"
      tags:
        - Profile Fields
  /profiles/fields/sections:
    get:
      summary: Sections Index
      description: |
        Returns all currently supported Sections, default and custom.
        NAME is the internal name of the field, which is also the key that should be used in the profile API endpoints. This may be distinct from LABEL, which is what will appear in the web interface.
        The valid format info is an attempt to explain what the proper format and possible values are for that field.
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              sections:
                type: array
                items:
                  $ref: '#/definitions/Section'
              meta:
                type: object
                $ref: '#/definitions/Meta'
              links:
                type: object
                properties:
                  sections.fields:
                      type: string
              linked:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      $ref: "#/definitions/Field"
      tags:
        - Profile Fields Sections
    post:
      summary: Create Section
      description: |
        Allows you to create a section that will include several profile fields. For example, a "General" section can include profile fields for "First Name", "Last Name", "Titles", etc.
      parameters:
        - name: body
          in: body
          required: true
          description: JSON payload for creating a new section.
          schema:
            $ref: "#/definitions/Create Section"
      responses:
        201:
          description: "Created Response"
          schema:
            type: object
            properties:
              hello:
                type: string
              sections:
                type: array
                items:
                  $ref: '#/definitions/Section'
              meta:
                type: object
                $ref: "#/definitions/Meta"
              links:
                type: object
                properties:
                  sections.fields:
                    type: string
              linked:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      $ref: "#/definitions/Field"
      tags:
        - Profile Fields Sections
  /profiles/fields/sections/:id:
    get:
      summary: Show Section
      description: |
        This method allows users to retrieve a section.
        The results will contain additional information from all fields that your company has (default and custom) in that particular section that are currently supported by the API and that the current user has access to for the given user. You can get a full list of accessible fields, as well as information on formatting them from the fields API endpoint.
      parameters:
        - name: id
          in: query
          description: Section id
          required: true
          type: string
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              hello:
                type: string
              sections:
                type: array
                items:
                  $ref: '#/definitions/Section'
              meta:
                type: object
                $ref: "#/definitions/Meta"
              links:
                type: object
                properties:
                  sections.fields:
                    type: string
              linked:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      $ref: "#/definitions/Field"
      tags:
        - Profile Fields Sections
    put:
      summary: Update Section
      description: |
        The update action is similar to the create action in what is modifiable and how it should be set. You need only pass the attribute (name of section) that you would like to modify. Any others will remain as they are.
      parameters:
        - name: id
          in: query
          description: Section id
          required: true
          type: string
        - name: body
          in: body
          required: true
          description: JSON payload for updating a section.
          schema:
            $ref: "#/definitions/Update Section"
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              hello:
                type: string
              sections:
                type: array
                items:
                  $ref: '#/definitions/Section'
              meta:
                type: object
                $ref: "#/definitions/Meta"
              links:
                type: object
                properties:
                  sections.fields:
                    type: string
              linked:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      $ref: "#/definitions/Field"
      tags:
        - Profile Fields Sections
  /events:
    get:
      summary: Events Index
      description: |
        This method allows a user to retrieve a list of events from their company's home page feed.
        Each event may have one or more linked comments. Each event and comment will have a linked profile, which may have a linked image.
        Announcement events may have an associated file, which will appear in the linked files section. If that file is an image, it will have its available thumbnails
        For more information on how the links/linked system works, please consult the JSON API section of the documentation.
        There are several types of events: "anniversary", "birthday", "announcement", and "new_arrival".
        Anniversary events will have "years_at_company" filled in with the integer value of how many years the profile has been at the company.
        Announcement events will contain "html_content" which is the html formatted content of the event.
        Each event and comment will contain information about whether the user can destroy it, located in "can_destroy".
        This endpoint uses pagination through two optional parameters. The first, limit, defaults to 30 and accepts an integer value. The second, after, should be the id of the first record BEFORE the records that you want to retrieve.
      parameters:
        - name: limit
          in: query
          description: Limit of records to be retrieved
          required: false
          type: integer
        - name: after
          in: query
          description: id of first record BEFORE the records you want to retrieve
          required: false
          type: string
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              events:
                type: array
                items:
                  $ref: "#/definitions/Event"
              meta:
                type: object
                $ref: "#/definitions/Events Meta"
              links:
                type: object
                properties:
                  events.profile:
                    $ref: "#/definitions/Link"
                  events.comments:
                    $ref: "#/definitions/Link"
                  events.file:
                    $ref: "#/definitions/Link"
                  comments.profile:
                    $ref: "#/definitions/Link"
                  profile.image:
                    $ref: "#/definitions/Link"
              linked:
                type: object
                properties:
                  profiles:
                    type: array
                    items:
                      $ref: "#/definitions/Profile"
                  comments:
                    type: array
                    items:
                      $ref: "#/definitions/Comment"
                  files:
                    type: array
                    items:
                      $ref: "#/definitions/File"
      tags:
        - Events
    post:
      summary: Create Event
      description: |
        This endpoint will create an "announcement" type event. It is not possible to create other types of events via the API. Instead, they are created automatically when certain event like an employee birthday occurs.
        The content can contain markdown, which will automatically be parsed.
        The file parameters allows you to include file in the crated in the event. As with uploading a file to a profile, the file must be previously uploaded via the file create endpoint.
        Events belong to a profile and therefore cannot be created by a dedicated API user.
      parameters:
        - name: body
          in: body
          required: true
          description: Event to be added as an announcement.
          schema:
            $ref: "#/definitions/Create Event"
      responses:
        201:
          description: "Create Response"
          schema:
            type: object
            properties:
              events:
                type: array
                items:
                  $ref: "#/definitions/Event"
              meta:
                type: object
                $ref: "#/definitions/Events Meta"
              links:
                type: object
                properties:
                  events.profile:
                    $ref: "#/definitions/Link"
                  events.comments:
                    $ref: "#/definitions/Link"
                  events.file:
                    $ref: "#/definitions/Link"
                  comments.profile:
                    $ref: "#/definitions/Link"
                  profile.image:
                    $ref: "#/definitions/Link"
              linked:
                type: object
                properties:
                  profiles:
                    type: array
                    items:
                      $ref: "#/definitions/Profile"
                  comments:
                    type: array
                    items:
                      $ref: "#/definitions/Comment"
                  files:
                    type: array
                    items:
                      $ref: "#/definitions/File"
      tags:
        - Events
  /events/:id:
    get:
      summary: Show Event
      description: This endpoint has the same return format as the events index, except that it returns only one event.
      parameters:
        - name: id
          in: query
          description: id of event.
          required: true
          type: string
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              events:
                type: array
                items:
                  $ref: "#/definitions/Event"
              meta:
                type: object
                $ref: "#/definitions/Events Meta"
              links:
                type: object
                properties:
                  events.profile:
                    $ref: "#/definitions/Link"
                  events.comments:
                    $ref: "#/definitions/Link"
                  events.file:
                    $ref: "#/definitions/Link"
                  comments.profile:
                    $ref: "#/definitions/Link"
                  profile.image:
                    $ref: "#/definitions/Link"
              linked:
                type: object
                properties:
                  profiles:
                    type: array
                    items:
                      $ref: "#/definitions/Linked Profile"
                  comments:
                    type: array
                    items:
                      $ref: "#/definitions/Comment"
                  files:
                    type: array
                    items:
                      $ref: "#/definitions/File"
      tags:
        - Events
  /countries:
    get:
      summary: Countries Index
      description: Returns all valid countries in Namely. Countries are universal and may not be modified. id is the value that should be passed when setting address values. Each entry contains the proper naming for it's subdivision (e.g. 'State' or 'Province'). In order to get a list of a state's subdivisions, access the country's show endpoint.
      responses:
        200:
          description: "Successful Response"
          schema:
            type: array
            items:
              $ref: "#/definitions/Country"
      tags:
        - Countries
  /countries/:id:
    get:
      summary: Show Country
      description: Returns all valid countries in Namely. A country is universal and may not be modified. id is the value that should be passed when setting address values. Each entry contains the proper naming for it's subdivision (e.g. 'State' or 'Province'). In order to get a list of a state's subdivisions, access the country's show endpoint.
      parameters:
        - name: id
          in: query
          description: id of desired country (an abbreviation of the country's name).
          required: true
          type: string
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              countries:
                type: array
                items:
                  $ref: "#/definitions/Country"
              links:
                type: object
                properties:
                  subdivision:
                    type: array
                    items:
                      $ref: "#/definitions/Subdivision"
      tags:
        - Countries
  /job_titles:
    get:
      summary: Job Titles Index
      description: This endpoint returns all job titles, in the same format as in the show endpoint. Each job title has one linked job tier, and each job tier can have many job titles.
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              job_titles:
                type: array
                items:
                  $ref: "#/definitions/Job Title"
              meta:
                type: object
                $ref: "#/definitions/Meta"
              links:
                type: object
                properties:
                  job_titles.job_tier:
                    type: object
                    items:
                      $ref: "#/definitions/Link"
              linked:
                type: object
                properties:
                  job_tiers:
                    type: array
                    items:
                      $ref: "#/definitions/Job Tier"
      tags:
        - Job Title
    post:
      summary: Create Job Title
      description: To get a list of available job tiers, use the job tiers index endpoint.
      parameters:
        - name: body
          in: body
          required: true
          description: Endpoint to create a job title.
          schema:
            $ref: "#/definitions/Create Job Title"
      responses:
        201:
          description: "Create Response"
          schema:
            type: object
            properties:
              job_titles:
                type: array
                items:
                  $ref: "#/definitions/Job Title"
              meta:
                type: object
                $ref: "#/definitions/Meta"
              links:
                type: object
                properties:
                  job_titles.job_tier:
                    type: object
                    $ref: "#/definitions/Link"
              linked:
                type: object
                properties:
                  job_tiers:
                    type: array
                    items:
                      $ref: "#/definitions/Job Tier"
      tags:
        - Job Title
  /job_titles/:id:
    get:
      summary: Show Job Title
      description: This endpoint returns information about one job title. Each job title has one job tier, which is included in the "linked" section. For more information about how "links" and "linked" work, please consult the JSON API section of the documentation.
      parameters:
        - name: id
          in: query
          description: id of Job Title.
          required: true
          type: string
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              job_titles:
                type: array
                items:
                  $ref: "#/definitions/Job Title"
              meta:
                type: object
                $ref: "#/definitions/Meta"
              links:
                type: object
                properties:
                  job_titles.job_tier:
                    type: object
                    $ref: "#/definitions/Link"
              linked:
                type: object
                properties:
                  job_tiers:
                    type: array
                    items:
                      $ref: "#/definitions/Job Tier"
      tags:
        - Job Title
    put:
      summary: Update Job Title
      description: Allows you to modify an existing job title. To get a list of available job tiers, use the job tiers index endpoint.
      parameters:
        - name: title
          in: query
          description: Title.
          required: true
          type: string
        - name: job_tier
          in: query
          description: id of Job Tier.
          required: true
          type: string
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              job_titles:
                type: array
                items:
                  $ref: "#/definitions/Job Title"
              meta:
                type: object
                $ref: "#/definitions/Meta"
              links:
                type: object
                properties:
                  job_titles.job_tier:
                    type: object
                    $ref: "#/definitions/Link"
              linked:
                type: object
                properties:
                  job_tiers:
                    type: array
                    items:
                      $ref: "#/definitions/Job Tier"
      tags:
        - Job Title
  /job_tiers:
    get:
      summary: Job Tiers Index
      description: This method returns an array of all job tiers, whose format and content will be the same as the show profile endpoint.
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              job_tiers:
                type: array
                items:
                  $ref: "#/definitions/Job Tier"
              meta:
                type: object
                $ref: "#/definitions/Meta"
              links:
                type: object
                properties:
                  job_tiers.job_titles:
                    type: object
                    $ref: "#/definitions/Link"
              linked:
                type: object
                properties:
                  job_titles:
                    type: array
                    items:
                      $ref: "#/definitions/Job Title Link"
      tags:
        - Job Tier
    post:
      summary: Create Job Tier
      description: Create a job tier. It's only parameter is title, which is required.
      parameters:
        - name: title
          in: query
          description: Title
          required: true
          type: string
        - name: body
          in: body
          required: true
          description: Endpoint to create a job tier.
          schema:
            $ref: "#/definitions/Create Job Tier"
      responses:
        201:
          description: "Create Response"
          schema:
            type: object
            properties:
              job_tiers:
                type: array
                items:
                  $ref: "#/definitions/Job Tier"
              meta:
                type: object
                $ref: "#/definitions/Meta"
              links:
                type: object
                properties:
                  job_tiers.job_titles:
                    type: object
                    $ref: "#/definitions/Link"
              linked:
                type: object
                properties:
                  job_titles:
                    type: array
                    items:
                      $ref: "#/definitions/Job Title"
      tags:
        - Job Tier
  /job_tiers/:id:
    get:
      summary: Show Job Tier
      description: The linked objects will contain information on all of the job titles assosciated with the job tier. For more information on how "links" and "linked" work, please consult the JSON API section of the documentation.
      parameters:
        - name: id
          in: query
          description: id of the Job Tier.
          required: true
          type: string
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              job_tiers:
                type: array
                items:
                  $ref: "#/definitions/Job Tier"
              meta:
                type: object
                $ref: "#/definitions/Meta"
              links:
                type: object
                properties:
                  job_tiers.job_titles:
                    type: object
                    $ref: "#/definitions/Link"
              linked:
                type: object
                properties:
                  job_titles:
                    type: array
                    items:
                      $ref: "#/definitions/Job Title"
      tags:
        - Job Tier
    put:
      summary: Update Job Tier
      description: Updates a Job Tier.
      parameters:
        - name: id
          in: query
          description: id of the Job Tier to update.
          required: true
          type: string
        - name: body
          in: body
          required: true
          description: Endpoint to update a job tier.
          schema:
            $ref: "#/definitions/Update Job Tier"
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              job_tiers:
                type: array
                items:
                  $ref: "#/definitions/Job Tier"
              meta:
                type: object
                $ref: "#/definitions/Meta"
              links:
                type: object
                properties:
                  job_tiers.job_titles:
                    type: object
                    $ref: "#/definitions/Link"
              linked:
                type: object
                properties:
                  job_titles:
                    type: array
                    items:
                      $ref: "#/definitions/Job Title"
      tags:
        - Job Tier
  /groups:
    get:
      summary: Groups Index
      description: This method returns an array of groups and department names.
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              groups:
                type: array
                items:
                  $ref: "#/definitions/Group"
              meta:
                type: object
                $ref: "#/definitions/Meta Group"
              links:
                type: object
                properties:
                  groups.group_type:
                    type: object
                    $ref: "#/definitions/Link"
              linked:
                type: object
                properties:
                  group_types:
                    type: array
                    items:
                      $ref: "#/definitions/Group Type"
      tags:
        - Groups
  /groups/:id:
    get:
      summary: Show Group
      description: This method allows users to retrieve a specific group.
      parameters:
        - name: id
          in: query
          description: Group id.
          required: true
          type: string
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              groups:
                type: array
                items:
                  $ref: "#/definitions/Group"
              meta:
                type: object
                $ref: "#/definitions/Meta Group"
              links:
                type: object
                properties:
                  groups.group_type:
                    type: object
                    $ref: "#/definitions/Link"
                  groups.profiles:
                    type: object
                    $ref: "#/definitions/Link"
              linked:
                type: object
                properties:
                  group_types:
                    type: array
                    items:
                      $ref: "#/definitions/Group Type"
                  profiles:
                    type: array
                    items:
                      $ref: "#/definitions/Linked Profile"
                  files:
                    type: array
                    items:
                      $ref: "#/definitions/File"
      tags:
        - Groups
    put:
      summary: Update Group
      description: This method updates a specific group.
      parameters:
        - name: id
          in: query
          description: Group id.
          required: true
          type: string
        - name: body
          in: body
          required: true
          description: Endpoint to update a group.
          schema:
            $ref: "#/definitions/Update Group"
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              groups:
                type: array
                items:
                  $ref: "#/definitions/Group"
              meta:
                type: object
                $ref: "#/definitions/Meta Group"
              links:
                type: object
                properties:
                  groups.group_type:
                    type: object
                    $ref: "#/definitions/Link"
              linked:
                type: object
                properties:
                  group_types:
                    type: array
                    items:
                      $ref: "#/definitions/Group Type"
      tags:
        - Groups
  /group_types:
    get:
      summary: Group Types Index
      description: This endpoint returns an array of group types.
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              group_types:
                type: array
                items:
                  $ref: "#/definitions/Group Type"
              meta:
                type: object
                $ref: "#/definitions/Meta"
              links:
                type: object
                properties:
                  group_type.group:
                    type: object
                    $ref: "#/definitions/Link"
              linked:
                type: object
                properties:
                  group_types:
                    type: array
                    items:
                      $ref: "#/definitions/Group Type"
      tags:
        - Groups
    post:
      summary: Create Group
      description: This endpoint creates a new group type.
      parameters:
        - name: body
          in: body
          required: true
          description: Createa a new group type.
          schema:
            $ref: "#/definitions/Create Group Type"
      responses:
        201:
          description: "Create Response"
          schema:
            type: object
            properties:
              group_types:
                type: array
                items:
                  $ref: "#/definitions/Group Type"
              meta:
                type: object
                $ref: "#/definitions/Meta"
              links:
                type: object
                properties:
                  group_type.group:
                    type: object
                    $ref: "#/definitions/Link"
              linked:
                type: object
                properties:
                  group_types:
                    type: array
                    items:
                      $ref: "#/definitions/Group Type"
      tags:
        - Groups
  /group_types/:id:
    put:
      summary: Update Group Type
      description: You can update a Group Type with the viable parameters.
      parameters:
        - name: id
          in: query
          description: Group type id.
          required: true
          type: string
        - name: body
          in: body
          required: true
          description: Edit an existing group type.
          schema:
            $ref: "#/definitions/Update Group Type"
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              group_types:
                type: array
                items:
                  $ref: "#/definitions/Group Type"
              meta:
                type: object
                $ref: "#/definitions/Meta"
              links:
                type: object
                properties:
                  group_type.group:
                    type: object
                    $ref: "#/definitions/Link"
              linked:
                type: object
                properties:
                  group_types:
                    type: array
                    items:
                      $ref: "#/definitions/Group Type"
      tags:
        - Groups
  # /file:
  #   post:
  #     summary: Create File
  #     description: |
  #       In order to set a file attribute in another API endpoint (such as a profile file or image field, or adding a file to an event), it is first necessary to upload the file in a separate request.
  #       The format for this post request is different from other endpoints of the API. While other endpoints require a json formatted post request, uploading a file should be in a multipart/form-data format.
  #       Once you have successfully completed this upload, the response will give you the id of the newly uploaded file, to set for profile attributes or events.
  #       As a security feature the download links to files will expire after 10 minutes. Every file download link will include a one-time token.
  #       In the case of an image file, the response will show available thumbs, as shown above.
  #     parameters:
  #       - name: file
  #         in: query
  #         description: File Object
  #         required: true
  #         type: string
  #     responses:
  #       200:
  #         description: "Successful Response"
  #         schema:
  #           type: array
  #           items:
  #             $ref: "#/definitions/File"
  #   get:
  #     summary: Download File
  #     description: Obtain the "file_url" from GET show resource endpoint and pass as parameter.
  #     parameters:
  #       - name: file
  #         in: query
  #         description: id given by file_url in 'Show Resource GET Endpoint'.
  #         required: true
  #         type: string
  #     responses:
  #       200:
  #         description: "Successful Response"
  #         schema:
  #           type: array
  #           items:
  #             $ref: "#/definitions/File"
  #     tags:
  #       - File
  /likes/event/:eventid/recent:
    get:
      summary: Likes Index
      description: Returns references to profiles who liked the specified event.
      parameters:
        - name: eventid
          in: query
          description: id of the event.
          required: true
          type: string
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              groups:
                type: array
                items:
                  $ref: "#/definitions/Like"
      tags:
        - Likes
  /likes/event/:id:
    post:
      summary: Create Like
      description: Pass in the event id to post a like.
      parameters:
        - name: id
          in: query
          description: Event id.
          required: true
          type: string
        - name: body
          in: body
          required: true
          description: Create a like.
          schema:
            $ref: "#/definitions/Create Like"
      responses:
        201:
          description: "Success!"
    delete:
      summary: Delete Like
      description: Pass in the event id to delete a like.
      parameters:
        - name: id
          in: query
          description: Event id.
          required: true
          type: string
        - name: body
          in: body
          required: true
          description: Delete a like.
          schema:
            $ref: "#/definitions/Delete Like"
      responses:
        200:
          description: "Successful Response"
  /reports/:id:
    get:
      summary: Show Report
      description: You will receive a list of fields included in the report you created in Namely. To export the fields in the CSV file, please use the endpoint - https://[company].namely.com/reports/[report_id]/results.csv.
      parameters:
        - name: id
          in: query
          description: Report id.
          required: true
          type: string
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              reports:
                type: array
                items:
                  $ref: "#/definitions/Report"
              meta:
                type: object
              links:
                type: object
              linked:
                type: object
  /folder/:id/resources:
    get:
      summary: Resources Index
      description: This method returns an array of resources, whose format and content will be the same as the show resource endpoint.
      parameters:
        - name: id
          in: query
          description:  Use the folder id to pull the resources you want to see.
          required: true
          type: string
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              resources:
                type: array
                items:
                  $ref: "#/definitions/Resource"
              meta:
                type: object
                properties:
                  is_super_admin:
                    type: boolean
                  accepted_file_extensions:
                    type: string
    post:
      summary: Create Resource
      description: To create a resource, you will need to either upload a file or provide a link.
      parameters:
        - name: body
          in: body
          required: true
          description: JSON payload for creating a new resource.
          schema:
            $ref: "#/definitions/Create Resource"
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              resources:
                type: array
                items:
                  $ref: "#/definitions/Resource"
              meta:
                type: object
                properties:
                  is_super_admin:
                    type: boolean
                  accepted_file_extensions:
                    type: string
    delete:
      summary: Delete Resource
      description: This endpoint deletes a specified resource.
      parameters:
        - name: id
          in: query
          description: The resource's id.
          required: true
          type: string
      responses:
        200:
          description: "Successful Response"
  /resources/:id:
    get:
      summary: Show Resource
      description: Specify the id of the resource to get a complete description. Please see "Download Resource" documentation to actually download a specific resource.
      parameters:
        - name: id
          in: query
          description: The resource's id.
          required: true
          type: string
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              groups:
                type: array
                items:
                  $ref: "#/definitions/Resource"
    put:
      summary: Update Resource
      description: Pass in the necessary parameters to update a resource.
      parameters:
        - name: id
          in: query
          description: The resource's id.
          required: true
          type: string
        - name: body
          in: body
          required: true
          description: JSON payload for updating a new resource.
          schema:
            $ref: "#/definitions/Update Resource"
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              resources:
                type: array
                items:
                  $ref: "#/definitions/Resource"
  /folders:
    get:
      summary: Show Folders
      description: This endpoint returns a list of folders and their information.
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              resources:
                type: array
                items:
                  $ref: "#/definitions/Folder"
    post:
      summary: Create Folder
      description: To create a folder, a title is required. An array of folders will be returned upon success, similar to folders index endpoint.
      parameters:
        - name: body
          in: body
          required: true
          description: JSON payload for creating a new folder.
          schema:
            $ref: "#/definitions/Create Folder"
      responses:
        201:
          description: "Created Reponse"
          schema:
            type: object
            properties:
              resources:
                type: array
                items:
                  $ref: "#/definitions/Folder"
  /folders/:id:
    put:
      summary: Update Folder
      description: You must know the id of the folder to update it.
      parameters:
        - name: id
          in: query
          description: The folder's id.
          required: true
          type: string
        - name: body
          in: body
          required: true
          description: JSON payload for updating an existing folder.
          schema:
            $ref: "#/definitions/Update Folder"
      responses:
        200:
          description: "Successful Response"
          schema:
            type: object
            properties:
              resources:
                type: array
                items:
                  $ref: "#/definitions/Folder"
    delete:
      summary: Delete Folder
      description: You must pass in the folder id to delete a specific folder.
      parameters:
        - name: id
          in: query
          description: The folder's id.
          required: true
          type: string
      responses:
        200:
          description: "Successful Response"
definitions:
  Address:
    type: object
    properties:
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      state_id:
        type: string
      zip:
        type: string
      state:
        type: string
      country:
        type: string
      country_id:
        type: string
      phone:
        type: string
  Column:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      label:
        type: string
  Comment:
    type: object
    properties:
      id:
        type: string
      content:
        type: string
      html_content:
        type: string
      created_at:
        type: integer
      can_destroy:
        type: boolean
      links:
        type: object
        properties:
          profile:
            type: string
      utc_offset:
        type: integer
      likes_count:
        type: integer
      liked_by_current_profile:
        type: boolean
  Compensation & Benefits:
    type: object
    properties:
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      country_id:
        type: string
      state_id:
        type: string
      zip:
        type: string
  Content:
    type: array
    items:
      type: string
  Country:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      subdivision_type:
        type: string
  Create Event:
    type: object
    properties:
      events:
        type: object
        properties:
          content:
            type: string
          email_all:
            type: boolean
          mentions:
            type: string
          file_id:
            type: string
  Create Folder:
    type: object
    properties:
      folders:
        type: array
        items:
          $ref: "#/definitions/Create Folder Payload"
  Create Folder Payload:
    type: object
    properties:
      title:
        type: string
  Create Group Type:
    type: object
    properties:
      group_types:
        type: object
        properties:
          title:
            type: string
          x_groups_as_teams:
            type: boolean
  Create Job Tier:
    type: object
    properties:
      job_tiers:
        type: array
        items:
          $ref: "#/definitions/Create Job Tier Payload"
  Create Job Tier Payload:
    type: object
    properties:
      title:
        type: string
  Create Job Title:
    type: object
    properties:
      job_titles:
        type: array
        items:
          $ref: "#/definitions/Create Job Title Payload"
  Create Job Title Payload:
    type: object
    properties:
      title:
        type: string
      parent:
        type: string
  Create Like:
    type: object
    properties:
      message:
        type: array
        items:
          $ref: "#/definitions/Create Like Payload"
  Create Like Payload:
    type: object
    properties:
      liked_by_current_profile:
        type: boolean
      likes_count:
        type: integer
  Create Profile:
    type: object
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      user_status:
        type: string
  Create Profile Field:
    type: object
    properties:
      fields:
        type: array
        items:
          $ref: "#/definitions/Create Profile Field Payload"
  Create Profile Field Payload:
    type: object
    properties:
      section:
        type: string
      title:
        type: string
      type:
        type: string
  Create Resource:
    type: object
    properties:
      folder_id:
        type: string
      resources:
        type: array
        items:
          $ref: "#/definitions/Create Resource Payload"
  Create Resource Payload:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      user_file_id:
        type: string
  Create Section:
    type: object
    properties:
      sections:
        type: array
        items:
          $ref: "#/definitions/Create Section Payload"
  Create Section Payload:
    type: object
    properties:
      title:
        type: string
  Currency Type:
    type: object
    properties:
      iso:
        type: string
      name:
        type: string
      symbol:
        type: string
  Event:
    type: object
    properties:
      events:
        type: object
        properties:
          id:
            type: string
          href:
            type: string
          type:
            type: string
          time:
            type: integer
          ufc_offset:
            type: integer
          content:
            type: string
          html_content:
            type: string
          years_at_company:
            type: integer
          use_comments:
            type: boolean
          can_comment:
            type: boolean
          can_destroy:
            type: boolean
          links:
            type: object
            properties:
              profile:
                type: string
              comments:
                type: array
                items:
                  type: string
              file:
                type: string
          can_like:
            type: boolean
          likes_count:
            type: integer
          liked_by_current_profile:
            type: boolean
  Events Meta:
    type: object
    properties:
      response:
        type: integer
      use_comments:
        type: boolean
      use_updates:
        type: boolean
      use_mentions:
        type: boolean
      use_likes:
        type: boolean
      count:
        type: integer
  Folder:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      type:
        type: string
      items_count:
        type: integer
  Delete Like:
    type: object
    properties:
      message:
        type: array
        items:
          $ref: "#/definitions/Delete Like Payload"
  Delete Like Payload:
    type: object
    properties:
      liked_by_current_profile:
        type: boolean
      likes_count:
        type: integer
  Dental:
    type: object
    properties:
      beneficiary:
        type: string
      amount:
        type: string
      currency_type:
        type: string
  Field:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      label:
        type: string
      type:
        type: string
      default:
        type: boolean
      deletable:
        type: boolean
      valid_format_info:
        type: string
      block_index:
        type: integer
      links:
        type: object
        properties:
          section:
            type: string
  File:
    type: object
    properties:
      id:
        type: string
      filename:
        type: string
      mime_type:
        type: string
      original:
        type: string
      thumbs:
        type: array
        items:
          $ref: "#/definitions/Thumb"
  Group:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      type:
        type: string
      address:
        type: object
        $ref: "#/definitions/Address"
      links:
        type: object
        properties:
          group_type:
            type: string
  Group Link:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
  Group Type:
    type: object
    properties:
      id:
        type: string
      field_name:
        type: string
      title:
        type: string
      deletable:
        type: boolean
      x_groups_as_teams:
        type: boolean
  Healthcare:
    type: object
    properties:
      beneficiary:
        type: string
      amount:
        type: string
      currency_type:
        type: string
  Home:
    type: object
    properties:
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      state_id:
        type: string
      zip:
        type: string
  Image:
    type: object
    properties:
      id:
        type: string
      filename:
        type: string
      mime_type:
        type: string
      original:
        type: string
      thumbs:
        $ref: "#/definitions/Thumb"
  Job Tier:
    type: object
    properties:
      id:
        type: string
      numerical_id:
        type: string
      title:
        type: string
      links:
        type: object
        properties:
          job_titles:
            type: string
  Job Title:
    type: object
    properties:
      id:
        type: string
      parent_id:
        type: string
      title:
        type: string
      links:
        type: object
        properties:
          job_tier:
            type: string
  Job Title Link:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
  Like:
    type: object
    properties:
      id:
        type: string
      href:
        type: string
      full_name:
        type: string
      job_title:
        type: string
      links:
        type: object
        properties:
          image:
            type: string
          thumbs:
            type: object
            items:
              $ref: "#/definitions/Thumb"
  Link:
    type: object
    properties:
      type:
        type: string
  Linked:
    type: object
    properties:
      job_titles:
        type: array
        items:
          $ref: "#/definitions/Job Title"
      files:
        type: array
        items:
          $ref: "#/definitions/File"
      groups:
        type: array
        items:
          $ref: "#/definitions/Group"
      teams:
        type: array
        items:
          $ref: "#/definitions/Team"
  Linked Profile:
    type: object
    properties:
      id:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      user_status:
        type: string
      updated_at:
        type: integer
      created_at:
        type: integer
      preferred_name:
        type: string
      image:
        type: object
        items:
          $ref: "#/definitions/Image"
      full_name:
        type: string
  Meta:
    type: object
    properties:
      count:
        type: integer
      status:
        type: integer
  Meta Group:
    type: object
    properties:
      response:
        type: integer
      count:
        type: integer
      page_title:
        type: string
      page_copy:
        type: string
  Office:
    type: object
    properties:
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      state_id:
        type: string
      country_id:
        type: string
      zip:
        type: string
      phone:
        type: string
  Profile:
    type: object
    properties:
      id:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      user_status:
        type: string
      updated_at:
        type: integer
      created_at:
        type: integer
      preferred_name:
        type: string
      image:
        $ref: "#/definitions/Image"
      full_name:
        type: string
      job_title:
        $ref: "#/definitions/Job Title Link"
      reports_to:
        type: object
        properties:
          id:
            type: string
          first_name:
            type: string
          last_name:
            type: string
          email:
            type: string
      links:
        type: object
        properties:
          job_title:
            type: object
            $ref: "#/definitions/Job Title Link"
          groups:
            type: array
            items:
              $ref: "#/definitions/Group Link"
          teams:
            type: array
            items:
              $ref: "#/definitions/Team Link"
      middle_name:
        type: string
      job_change_reason:
        type: string
      start_date:
        type: string
      depature_date:
        type: string
      employee_id:
        type: string
      personal_email:
        type: string
      dob:
        type: string
      ssn:
        type: string
      gender:
        type: string
      marital_status:
        type: string
      bio:
        type: string
      asset_management:
        type: string
      laptop_asset_number:
        type: string
      corporate_card_member:
        type: string
      key_tag_number:
        type: string
      linkedin_url:
        type: string
      office_main_number:
        type: string
      office_direct_dial:
        type: string
      office_phone:
        type: string
      office_fax:
        type: string
      office_company_mobile:
        type: string
      home_phone:
        type: string
      mobile_phone:
        type: string
      home:
        $ref: "#/definitions/Home"
      office:
        $ref: "#/definitions/Office"
      emergency_contact:
        type: string
      emergency_contact_phone:
        type: string
      resume:
        type: string
      current_job_description:
        type: string
      job_description:
        type: string
      salary:
        $ref: "#/definitions/Salary"
      healthcare:
        $ref: "#/definitions/Healthcare"
      healthcare_info:
        type: string
      dental:
        $ref: "#/definitions/Dental"
      dental_info:
        type: string
      vision_plan_info:
        type: string
      life_insurance_info:
        type: string
  Profile Links:
    type: object
    properties:
      profiles.job_title:
        $ref: "#/definitions/Link"
      profiles.image:
        $ref: "#/definitions/Link"
      profiles.groups:
        $ref: "#/definitions/Link"
      profiles.teams:
        $ref: "#/definitions/Link"
  Profile Meta:
    type: object
    properties:
      count:
        type: integer
      status:
        type: integer
  Report:
    type: object
    properties:
      id:
        type: string
      type:
        type: string
      columns:
        type: array
        items:
          $ref: "#/definitions/Column"
      content:
        type: array
        items:
          $ref: "#/definitions/Content"
      links:
        type: object
  Resource:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      link:
        type: string
      file_name:
        type: string
      file_format:
        type: string
      file_size:
        type: string
      file_url:
        type: string
      last_edited:
        type: string
      folder_id:
        type: integer
  Salary:
    type: object
    properties:
      yearly_amount:
        type: integer
      currency_type:
        type: string
      date:
        type: string
      rate:
        type: string
      guid:
        type: string
  Section:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      block_titles:
        type: array
        items:
          type: string
      links:
        type: object
        properties:
          fields:
            type: array
            items:
              type: string
  Subdivision:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
  Team:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
  Team Link:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
  Thumb:
    type: object
    properties:
      75x75:
        type: string
      75x75c:
        type: string
      150x150:
        type: string
      150x150c:
        type: string
      300x300:
        type: string
      300x300c:
        type: string
      450x450:
        type: string
      550x450c:
        type: string
      800x800:
        type: string
      800x800c:
        type: string
  Update Folder:
    type: object
    properties:
      folders:
        type: array
        items:
          $ref: "#/definitions/Update Folder Payload"
  Update Folder Payload:
    type: object
    properties:
      title:
        type: string
  Update Group:
    type: object
    properties:
      groups:
        type: array
        items:
          $ref: "#/definitions/Update Group Paylod"
  Update Group Paylod:
    type: object
    properties:
      address:
        type: object
        $ref: "#/definitions/Address"
      group_type:
        type: string
      title:
        type: string
  Update Group Type:
    type: object
    properties:
      group_types:
        type: object
        properties:
          title:
            type: string
          x_groups_as_teams:
            type: boolean
  Update Job Tier:
    type: object
    properties:
      job_tiers:
        type: array
        items:
          $ref: "#/definitions/Create Job Tier Payload"
  Update Job Tier Payload:
    type: object
    properties:
      title:
        type: string
  Update Profile Field:
    type: object
    properties:
      fields:
        type: array
        items:
          $ref: "#/definitions/Update Profile Field Payload"
  Update Profile Field Payload:
    type: object
    properties:
      title:
        type: string
  Update Resource:
    type: object
    properties:
      folder_id:
        type: string
      resources:
        type: array
        items:
          $ref: "#/definitions/Update Resource Payload"
  Update Resource Payload:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
  Update Section:
    type: object
    properties:
      sections:
        type: array
        items:
          $ref: "#/definitions/Update Section Payload"
  Update Section Payload:
    type: object
    properties:
      title:
        type: string
