/profiles:
  get:
    summary: Profiles Index
    description: |
      This method returns an array of `profiles`, whose format and content will be the same as the show profile endpoint.

      This endpoint uses pagination through two optional parameters. The first, limit, defaults to 30 and accepts EITHER an integer value, OR the string 'all' to return all records. The second, after, should be the id of the first record BEFORE the recrods that you want to retrieve.
    parameters:
      - name: per_page
        in: query
        description: Integer limit of records retrieved.
        type: integer
      - name: page
        in: query
        description: The page number to retrieve.
        type: integer
      - name: sort
        in: query
        description: An attribute to sort by fields on profiles. Allowed attributes are first_name, last_name, and job_title. Prepend with a - (minus) sign to reverse the order.
        type: string
      - name: filter
        in: query
        description: A hash containing a filter you'd like to apply before profiles are returned.
        type: object
    responses:
      200:
        description: "Successful Response"
        schema:
          type: array
          items:
            $ref: "#/definitions/Profile"
    tags:
      - Profiles
  post:
    summary: Create Profile
    description: The fields that you can set and will receive are a combination of Namely's defaults fields and custom fields that exist only for your company.
    parameters:
      - name: first_name
        in: query
        description: First name
        type: String
        required: Yes
      - name: last_name
        in: query
        description: Last name
        type: String
        required: Yes
      - name: email
        in: query
        description: Email.
        type: String
        required: Yes
      - name: user_status
        in: query
        description: User status, should be "active" or "inactive"
        type: string
        required: Yes
      - name: start_date
        in: query
        description: Start date
        type: yyyy-mm-dd
        required: No
      - name: departure_date
        in: query
        description: Depature date
        type: yyyy-mm-dd
        required: No
      - name: gender
        in: query
        description: Gender, should be "male", "female"
        type: string
        required: No
      - name: marital_status
        in: query
        description: Marital status, should be "single", "married", "civil partnership", "separated", or "divorced"
        type: string
        required: No
      - name: job_title
        in: query
        description: Valid job title GUID
        type: string
        required: No
      - name: resume
        in: query
        description: Resume file GUID
        type: string
        required: No
      - name: image
        in: query
        description: Image file GUID
        type: string
        required: No
      - name: office
        in: query
        description: Office address, hash[see below]
        type: string
        required: No
      - name: home
        in: query
        description: Home address, hash[see below]
        type: string
        required: No
    responses:
      201:
        description: "Created Response"
        schema:
          type: array
          items:
            $ref: "#/definitions/Profile"
    tags:
      - Profiles
/profiles/:id:
  get:
    summary: Show Profiles
    description: |
      This method allows users to retrieve a `profile`.

      The profile entry will contain additional information from all fields that your company has (default and custom) that are currently supported by the API and that the current user has access to for the given user. You can get a full list of accessible fields, as well as information on formatting them from the fields API endpoint.
    parameters:
      - name: id
        in: query
        type: string
    responses:
      200:
        description: "Successful Response"
        schema:
          type: array
          items:
            $ref: "#/definitions/Profile"
    tags:
      - Profiles
  put:
    summary: Update Profile
    description: |
      The update action is similar to the create action in what is modifiable and how it should be set. You need only pass the attributes that you would like to modify. Any others will remain as they are.
    parameters:
      - name: id
        in: query
        type: string
    responses:
      200:
        description: "Successful Response"
        schema:
          type: array
          items:
            $ref: "#/definitions/Profile"
    tags:
      - Profiles
/profiles/me:
  get:
    summary: Current User
    description: |
      The response will contain information about the user who owns the access token used to access the API.

      If the access token belongs to a full Profile, the response content and format will be identical as if you did a show request for that profile.

      However, if you are accessing via a dedicated API user, the response will be much shorter. The most important element in such a response would be EMAIL. FIRST_NAME and LAST_NAME will both be "Admin".
    parameters:
      - name: id
        in: query
        required: No
        type: string
    responses:
      200:
        description: "Successful Response"
        schema:
          type: array
          items:
            $ref: "#/definitions/Profile"
    tags:
      - Profiles
/profiles/fields:
  post:
    summary: Create Profile Field
    description: |
      Allows you to create a profile field within a section.
    parameters:
      - name: section_id
        in: query
        description: Section ID
        required: Yes
        type: string
      - name: title
        in: query
        description: Field Title
        required: Yes
        type: string
      - name: type
        in: query
        description: Field Type
        required: Yes
        type: string
      - name: choices
        in: query
        description: An array of choices for checkboxes and select fields.
        required: No
        type: string
    responses:
      201:
        description: "Created Response"
        schema:
          type: array
          items:
            $ref: "#/definitions/Field"
    tags:
      - Profile Fields
  get:
    summary: Profile Fields Index
    description: |
      Returns all currently supported Fields, default and custom.

      NAME is the internal name of the field, which is also the key that should be used in the profile API endpoints. This may be distinct from LABEL, which is what will appear in the web interface.

      The valid format info is an attempt to explain what the proper format and possible values are for that field.
    responses:
      200:
        description: "Successful Response"
        schema:
          type: array
          items:
            $ref: "#/definitions/Field"
    tags:
      - Profile Fields
  put:
    summary: Update Profile Field
    description: |
      Returns all currently supported Fields, default and custom.

      NAME is the internal name of the field, which is also the key that should be used in the profile API endpoints. This may be distinct from LABEL, which is what will appear in the web interface.

      The valid format info is an attempt to explain what the proper format and possible values are for that field.
    parameters:
      - name: section
        in: query
        description: Profile Field Section ID
        required: Yes
        type: string
    responses:
      200:
        description: "Successful Response"
        schema:
          type: array
          items:
            $ref: "#/definitions/Field"
    tags:
      - Profile Fields
/profiles/fields/sections:
  post:
    summary: Create Section
    description: |
      Allows you to create a section that will include several profile fields. For example, a "General" section can include profile fields for "First Name", "Last Name", "Titles", etc.
    parameters:
      - name: title
        in: query
        description: Section ID
        required: Yes
        type: string
    responses:
      201:
        description: "Created Response"
        schema:
          type: array
          items:
            $ref: "#/definitions/Sections"
    tags:
      - Profile Fields Sections
  get:
    summary: Sections Index
    description: |
      Returns all currently supported Sections, default and custom.

      NAME is the internal name of the field, which is also the key that should be used in the profile API endpoints. This may be distinct from LABEL, which is what will appear in the web interface.

      The valid format info is an attempt to explain what the proper format and possible values are for that field.
    responses:
      200:
        description: "Successful Response"
        schema:
          type: array
          items:
            $ref: "#/definitions/Section"
    tags:
      - Profile Fields Sections
/profiles/fields/sections:id:
  get:
    summary: Show Section
    description: |
      This method allows users to retrieve a section.

      The results will contain additional information from all fields that your company has (default and custom) in that particular section that are currently supported by the API and that the current user has access to for the given user. You can get a full list of accessible fields, as well as information on formatting them from the fields API endpoint.
    parameters:
      - name: id
        in: query
        description: Section ID
        required: Yes
        type: string
    responses:
      200:
        description: "Successful Response"
        schema:
          type: array
          items:
            $ref: "#/definitions/Section"
    tags:
      - Profile Fields Sections
  put:
    summary: Update Section
    description: |
      The update action is similar to the create action in what is modifiable and how it should be set. You need only pass the attribute (name of section) that you would like to modify. Any others will remain as they are.
    parameters:
      - name: id
        in: query
        description: Section ID
        required: Yes
        type: string
    responses:
      200:
        description: "Successful Response"
        schema:
          type: array
          items:
            $ref: "#/definitions/Section"
    tags:
      - Profile Fields Sections
